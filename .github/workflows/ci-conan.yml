name: CI

# This workflow is triggered on pushes to the repository.
on: [push, workflow_dispatch]

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        compiler_version: [9]
        option_proxyfmu: ['proxyfmu=True', 'proxyfmu=False']
    container:
      image: conanio/gcc${{ matrix.compiler_version }}-ubuntu16.04
      options: --privileged
    steps:
      - uses: actions/checkout@v4
      - name: Configure Conan
        run: conan remote add osp https://osp.jfrog.io/artifactory/api/conan/conan-local --force
      - name: Install dependencies
        run: conan install . --output-folder=build -s build_type=${{ matrix.build_type }} -s:b compiler.cppstd=17 -o "libcosim/*:${{ matrix.option_proxyfmu }}" --build=missing
      - name: Generate build system
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
      - name: Build
        run: |
          cmake --build build
          cmake --build build --target install
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cosim-${{ runner.os }}-${{ matrix.build_type }}-${{ matrix.compiler_version }}-${{ matrix.option_proxyfmu }}
          path: build/dist

  windows:
    name: Windows
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        build_type: [Debug, Release]
        option_proxyfmu: ['proxyfmu=True', 'proxyfmu=False']

    steps:
      - uses: actions/checkout@v4
      - name: Install prerequisites
        run: |
          pip3 install --upgrade setuptools pip
          pip3 install conan
      - name: Configure Conan
        run: |
          conan profile detect
          conan remote add osp https://osp.jfrog.io/artifactory/api/conan/conan-local --force
      - name: Build
        run: |
          conan install . --output-folder=build -s build_type=${{ matrix.build_type }} -o "libcosim/*:${{ matrix.option_proxyfmu }}" --build=missing
          cmake -A x64 -B build -S . "-DCMAKE_TOOLCHAIN_FILE=build/conan_toolchain.cmake"
          cmake --build build --config ${{ matrix.build_type }}
          cmake --build build --config ${{ matrix.build_type }} --target install
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cosim-${{ runner.os }}-${{ matrix.build_type }}-${{ matrix.option_proxyfmu }}
          path: build/dist
