name: cosim CI Conan

# This workflow is triggered on pushes to the repository.
on: [push, workflow_dispatch]

env:
  CONAN_LOGIN_USERNAME_OSP: ${{ secrets.osp_artifactory_usr }}
  CONAN_PASSWORD_OSP: ${{ secrets.osp_artifactory_pwd }}
  CONAN_REVISIONS_ENABLED: 1
  CONAN_NON_INTERACTIVE: True

jobs:
  conan-on-linux:
    name: Conan
    runs-on: ${{ matrix.os }}
    env:
      CC: gcc-${{ matrix.compiler_version }}
      CXX: g++-${{ matrix.compiler_version }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
        build_type: [Debug, Release]
        compiler_version: [7, 8, 9]
        compiler_libcxx: [libstdc++11]
        option_fmuproxy: ['fmuproxy=True', 'fmuproxy=False']

        exclude:
          - os: ubuntu-18.04
            build_type: Debug
            option_fmuproxy: 'fmuproxy=True'

    steps:
      - uses: actions/checkout@v2
      - name: Install prerequisites
        run: |
          sudo pip3 install --upgrade setuptools pip
          sudo pip3 install conan
      - name: Configure Conan
        run: conan remote add osp https://osp.jfrog.io/artifactory/api/conan/conan-local --force
      - name: Build
        run: |
          mkdir build
          cd build
          conan install -s build_type=${{ matrix.build_type }} -s compiler.version=${{ matrix.compiler_version }} -s compiler.libcxx=${{ matrix.compiler_libcxx }} -o libcosim:${{ matrix.option_fmuproxy }} ../
          for f in dist/lib/*; do patchelf --set-rpath \$ORIGIN $f; done
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ../
          cmake --build .
          cmake --build . --target install
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cosim-${{ runner.os }}-${{ matrix.build_type }}-${{ matrix.compiler_version }}-${{ matrix.option_fmuproxy }}
          path: build/dist

  conan-on-windows:
    name: Conan
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2016]
        build_type: [Debug, Release]
        compiler_version: [15]
        option_fmuproxy: ['fmuproxy=True', 'fmuproxy=False']

        exclude:
          - os: windows-2016
            build_type: Debug
            option_fmuproxy: 'fmuproxy=True'

    steps:
      - uses: actions/checkout@v2
      - name: Install prerequisites
        run: |
          pip3 install --upgrade setuptools pip
          pip3 install conan
      - name: Configure Conan
        run: conan remote add osp https://osp.jfrog.io/artifactory/api/conan/conan-local --force
      - name: Build
        shell: bash
        run: |
          mkdir build
          cd build
          conan install -s build_type=${{ matrix.build_type }} -s compiler.version=${{ matrix.compiler_version }} -o libcosim:${{ matrix.option_fmuproxy }} ../
          cmake -A x64 ../
          cmake --build . --config ${{ matrix.build_type }}
          cmake --build . --config ${{ matrix.build_type }} --target install
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cosim-${{ runner.os }}-${{ matrix.build_type }}-${{ matrix.option_fmuproxy }}
          path: build/dist
